blueprint:
  name: Tabletten Erinnerung (Android)
  description: | 
    **Die Automation und der Blueprint sind noch WIP**
    ## Benachrichtigung und Historie für Tabletten-Erinnerungen
    Für eine detallierte Anleitung: [Mein Blog-Post]()
  domain: automation
  input:
    input_datetime:
      name: input_datetime Helfer
      description: Erstelle einen Helfer und wähle ihn hier aus
      selector:
        entity:
          domain: input_datetime
          multiple: false

    notify_device:
      name: Notification
      description: Die HomeAssistant App muss auf dem Gerät installiert und eingerichtet sein.
      selector:
        device:
          integration: mobile_app
          multiple: false

    nfc_tag:
      name: NFC Tag ID (optional)
      description:
        Die Tag-ID des NFC-Tags. Du findest sie unter Einstellungen --> NFC Tags. Dann wählst du deinen NFC Tag aus.

    notification_title:
      name: Benachrichtigung - Titel (optional)
      description: "Default: Medication reminder"
      default: "Medication reminder!"
    
    notification_message:
      name: Benachrichtigung - Nachricht (optional)
      description: "Default: It's time to take your medication"
      default: "It's time to take your medication"

    notification_action_taken:
      name: "Benachrichtigung Aktion - Genommen (optional)"
      description: "Default: Genommen"
      default: "Genommen"

    notification_action_later:
      name: "Benachrichtigung Aktion - Später (optional)"
      description: "Default: Später"
      default: "Später"

    notification_action_skip:
      name: "Benachrichtigung Aktion - Überspringen (optional)"
      description: "Default: Überspringen"
      default: "Überspringen"

    ask_later_wait_time:
      name: Zeit bis zur Nächsten Benachrichtigung
      description: Minutes before notify again after a Ask later action.
      default: 30
      selector:
        number:
          min: 5
          max: 1440
          unit_of_measurement: minutes
          step: 1
          mode: slider

    logbook_message_remind:
      name: Logbook message for remind (optional)
      description: "Default: Reminder sent"
      default: "Reminder sent"

    logbook_message_taken:
      name: Logbook message for action Taken (optional)
      description: "Default: Medication taken"
      default: "Medication taken"

    logbook_message_later:
      name: Logbook message for action Ask later (optional)
      description: "Default: Postpone reminder"
      default: "Postpone reminder"

    logbook_message_skip:
      name: Logbook message for action Skip (optional)
      description: "Default: Reminder skipped"
      default: "Reminder skipped"

    logbook_message_no_answer:
      name: Logbook message for no action after timeout (optional)
      description: "Default: No answer time out"
      default: "No answer time out"

    logbook_message_nfc:
      name: Logbook message for action NFC Tag Scanned (optional)
      description: "Default: Medication taken (NFC)"
      default: "Medication taken (NFC)"

    optional_action:
      name: Optional action
      description: Run an action like notify a speaker at the same time that the mobile notification
      selector:
        action: {}
      default: []

variables:
  # Make input input_datetime available as a script level variable
  input_datetime: !input input_datetime

trigger:
  - platform: time
    at: !input input_datetime
    id: time_trigger
  - platform: tag
    tag_id: !input nfc_tag
    id: trigger_nfc

mode: restart

action:
  - alias: Choose depending on trigger
    choose:
      - conditions:
          - condition: trigger
            id:
              - trigger_nfc
        sequence:
          - service: logbook.log
            data:
              name: !input nfc_tag
              message: !input logbook_message_nfc
              entity_id: !input input_datetime       
          - device_id: !input "notify_device"
            domain: mobile_app
            type: notify
            message: "clear_notification"
            data:
              tag: !input input_datetime
          - alias: set input_datetime to tomorrow
            service: input_datetime.set_datetime
            data:
              date: "{{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }}"
            target:
              entity_id: !input input_datetime
      - conditions:
          - condition: trigger
            id:
              - time_trigger
          - condition: template
            value_template: >-
              {{ as_timestamp(now()) > as_timestamp(states(input_datetime))}}
        sequence:
          - repeat:
              while:
                - condition: template
                  value_template: >-
                    {{ now().timestamp() > state_attr(input_datetime, 'timestamp') }}
              sequence:
              - service: logbook.log
                data:
                  name: !input notification_title
                  message: !input logbook_message_remind
                  entity_id: !input input_datetime
              - choose:
                - conditions: "{{ true }}"
                  sequence: !input optional_action
              - device_id: !input notify_device
                domain: mobile_app
                type: notify
                title: !input notification_title
                message: !input notification_message
                data:
                  actions:
                    - title: !input notification_action_taken
                      action: "taken"
                    - title: !input notification_action_later
                      action: "later"
                    - title: !input notification_action_skip
                      action: "skip"
                  tag: "!input input_datetime"
              - wait_for_trigger:
                  platform: event
                  event_type: mobile_app_notification_action
                  event_data:
                    tag: !input input_datetime
                timeout:
                  minutes: !input "ask_later_wait_time"
              - choose:
                    - conditions: "{{ wait.trigger and wait.trigger.event.data.action == 'taken' }}"
                      sequence:
                        - service: logbook.log
                          data:
                            name: !input "notification_title"
                            message: !input "logbook_message_taken"
                            entity_id: !input "input_datetime"
                          alias: set input_datetime to tomorrow
                        - device_id: !input "notify_device"
                          domain: mobile_app
                          type: notify
                          message: "clear_notification"
                          data:
                            tag: !input input_datetime
                        - service: input_datetime.set_datetime
                          data:
                            date: >-
                              {{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }}
                          target:
                            entity_id: !input input_datetime
                    - conditions: "{{ wait.trigger and wait.trigger.event.data.action == 'later' }}"
                      sequence:
                        - service: logbook.log
                          data:
                            name: !input "notification_title"
                            message: !input "logbook_message_later"
                            entity_id: !input "input_datetime"
                        - delay:
                            minutes: !input "ask_later_wait_time"
                    - conditions: "{{ wait.trigger and wait.trigger.event.data.action == 'skip' }}"
                      sequence:
                        - service: input_datetime.set_datetime
                          data:
                            date: >-
                              {{ (now() + timedelta(days=1)).strftime('%Y-%m-%d') }}
                          target:
                            entity_id: !input input_datetime
                        - service: logbook.log
                          data:
                            name: !input "notification_title"
                            message: !input "logbook_message_skip"
                            entity_id: !input "input_datetime"
                default:
                  - device_id: !input "notify_device"
                    domain: mobile_app
                    type: notify
                    message: "clear_notification"
                    data:
                      tag: !input input_datetime
                  - service: logbook.log
                    data:
                      name: !input "notification_title"
                      message: !input "logbook_message_no_answer"
                      entity_id: !input "input_datetime"
